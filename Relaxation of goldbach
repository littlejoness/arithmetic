import math 


#sqfr(n) test if the integer n is squarefree or not. Outputs True if squarefree and False otherwise.


def sqfr(n):
    n = abs(n)
    if n <= 3:
        return True
    if n == 4:
        return False
    if n >= 5:
        for i in range(2, int(math.sqrt(n)) + 1):
            if n % i**2 == 0:
                return False
        return True
    
    
#prime(n) test if the integer n is prime or not. Outputs True if prime and False otherwise.     
    
    
def prime(n):
    n = abs(n)
    if n == 0 or n == 1:
        return False
    if n >= 2:
        for i in range(2,int(math.sqrt(n)) + 1):
            if n % i == 0:
                return False
        return True    
    
    
#ap(n,a,p) test if the integer n is congruent to a modulo q.    
    
    
def ap(n,a,q):
    if (n-a) % q == 0:
        return True
    return False


#count(n,a,q) counts the number of representation of n as the sum of a prime congruent to a modulo q and a squarefree integer.
    
    
def count(n,a,q):
    if n == 1:
        return False
    if n == 2:
        return False
    c = 0
    if n >=3:
        for i in range(1,n+1):
            if prime(i) == True and ap(i,a,q) and sqfr(n-i) == True:
                print(str(n) + ' = ' + str(i) + ' + ' + str(n-i) + ', ' +  str(i) + ' is a prime p with p = a (mod q)' ', ' + str(n-i) + ' is squarefree')
                c = c+1
    if c == 0:
         print(str(n) + ' has no rep')
    return None
        

count(124,1,4)
